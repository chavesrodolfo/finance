// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(cuid())
  stackUserId  String        @unique
  email        String        @unique
  name         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  
  // Relations
  transactions Transaction[]
  categories   Category[]
  budgets      Budget[]
  
  @@map("users")
}

model Category {
  id          String   @id @default(cuid())
  name        String
  description String?
  color       String?  @default("#6b7280")
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  
  @@unique([name, userId])
  @@map("categories")
}

model Transaction {
  id          String            @id @default(cuid())
  amount      Float
  description String
  notes       String?
  date        DateTime
  type        TransactionType
  userId      String
  categoryId  String
  createdAt   DateTime          @default(now())
  updatedAt   DateTime          @updatedAt
  
  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id])
  
  @@map("transactions")
}

model Budget {
  id        String   @id @default(cuid())
  name      String
  amount    Float
  period    Period   @default(MONTHLY)
  startDate DateTime
  endDate   DateTime?
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("budgets")
}

enum TransactionType {
  EXPENSE
  INCOME
  EXPENSE_SAVINGS
  RETURN
}

enum Period {
  WEEKLY
  MONTHLY
  QUARTERLY
  YEARLY
}
